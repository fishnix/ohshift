// Code generated by BobGen psql v0.38.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import "context"

type Factory struct {
	baseGooseDBVersionMods GooseDBVersionModSlice
	baseIncidentMods       IncidentModSlice
	baseTimelineEventMods  TimelineEventModSlice
}

func New() *Factory {
	return &Factory{}
}

func (f *Factory) NewGooseDBVersion(ctx context.Context, mods ...GooseDBVersionMod) *GooseDBVersionTemplate {
	o := &GooseDBVersionTemplate{f: f}

	if f != nil {
		f.baseGooseDBVersionMods.Apply(ctx, o)
	}

	GooseDBVersionModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) NewIncident(ctx context.Context, mods ...IncidentMod) *IncidentTemplate {
	o := &IncidentTemplate{f: f}

	if f != nil {
		f.baseIncidentMods.Apply(ctx, o)
	}

	IncidentModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) NewTimelineEvent(ctx context.Context, mods ...TimelineEventMod) *TimelineEventTemplate {
	o := &TimelineEventTemplate{f: f}

	if f != nil {
		f.baseTimelineEventMods.Apply(ctx, o)
	}

	TimelineEventModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) ClearBaseGooseDBVersionMods() {
	f.baseGooseDBVersionMods = nil
}

func (f *Factory) AddBaseGooseDBVersionMod(mods ...GooseDBVersionMod) {
	f.baseGooseDBVersionMods = append(f.baseGooseDBVersionMods, mods...)
}

func (f *Factory) ClearBaseIncidentMods() {
	f.baseIncidentMods = nil
}

func (f *Factory) AddBaseIncidentMod(mods ...IncidentMod) {
	f.baseIncidentMods = append(f.baseIncidentMods, mods...)
}

func (f *Factory) ClearBaseTimelineEventMods() {
	f.baseTimelineEventMods = nil
}

func (f *Factory) AddBaseTimelineEventMod(mods ...TimelineEventMod) {
	f.baseTimelineEventMods = append(f.baseTimelineEventMods, mods...)
}
